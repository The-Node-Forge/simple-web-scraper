"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4008],{9334:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"API_REFERENCE","title":"API Reference","description":"API parameters, returns, examples.","source":"@site/docs/API_REFERENCE.md","sourceDirName":".","slug":"/API_REFERENCE","permalink":"/simple-web-scraper/docs/API_REFERENCE","draft":false,"unlisted":false,"editUrl":"https://github.com/The-Node-Forge/simple-web-scraper/tree/main/docs/docs/API_REFERENCE.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"API Reference","description":"API parameters, returns, examples.","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/simple-web-scraper/docs/USAGE"},"next":{"title":"Changelog","permalink":"/simple-web-scraper/docs/CHANGELOG"}}');var t=r(4848),i=r(8453);const a={title:"API Reference",description:"API parameters, returns, examples.",sidebar_position:4},o=void 0,l={},c=[{value:"WebScraper Class",id:"webscraper-class",level:2},{value:"<code>new WebScraper(options?: ScraperOptions)</code>",id:"new-webscraperoptions-scraperoptions",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>scrape(url: string): Promise&lt;Record&lt;string, any&gt;&gt;</code>",id:"scrapeurl-string-promiserecordstring-any",level:3},{value:"<code>exportToJSON(data: any, filePath: string): void</code>",id:"exporttojsondata-any-filepath-string-void",level:3},{value:"<code>exportToCSV(data: any | any[], filePath: string): void</code>",id:"exporttocsvdata-any--any-filepath-string-void",level:3},{value:"Backend Example",id:"backend-example",level:2},{value:"Contributing",id:"contributing",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"webscraper-class",children:"WebScraper Class"}),"\n",(0,t.jsx)(n.h3,{id:"new-webscraperoptions-scraperoptions",children:(0,t.jsx)(n.code,{children:"new WebScraper(options?: ScraperOptions)"})}),"\n",(0,t.jsxs)(n.p,{children:["Creates a new instance of the ",(0,t.jsx)(n.code,{children:"WebScraper"})," class."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"options"})," (optional) - ",(0,t.jsx)(n.code,{children:"ScraperOptions"})," - An object containing configuration\noptions for the scraper."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"usePuppeteer"})," - ",(0,t.jsx)(n.code,{children:"boolean"})," (optional) - Whether to use Puppeteer for\nJavaScript-rendered pages. Default: ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"throttle"})," - ",(0,t.jsx)(n.code,{children:"number"})," (optional) - Delay in milliseconds between requests.\nDefault: ",(0,t.jsx)(n.code,{children:"1000"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rules"})," - ",(0,t.jsx)(n.code,{children:"Record<string, string>"})," - CSS selectors defining data extraction\nrules."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A new instance of ",(0,t.jsx)(n.code,{children:"WebScraper"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { WebScraper } from 'simple-web-scraper';\n\nconst scraper = new WebScraper({\n  usePuppeteer: true,\n  rules: { title: 'h1', content: 'p' },\n});\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"scrapeurl-string-promiserecordstring-any",children:(0,t.jsx)(n.code,{children:"scrape(url: string): Promise<Record<string, any>>"})}),"\n",(0,t.jsx)(n.p,{children:"Scrapes the given URL based on the configured options."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"url"})," - ",(0,t.jsx)(n.code,{children:"string"})," - The webpage URL to scrape."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Promise<Record<string, any>>"})," - The extracted data as an object."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const data = await scraper.scrape('https://example.com');\nconsole.log(data);\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"exporttojsondata-any-filepath-string-void",children:(0,t.jsx)(n.code,{children:"exportToJSON(data: any, filePath: string): void"})}),"\n",(0,t.jsx)(n.p,{children:"Exports the given data to a JSON file."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," - ",(0,t.jsx)(n.code,{children:"any"})," - The data to be exported."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filePath"})," - ",(0,t.jsx)(n.code,{children:"string"})," - The path where the JSON file should be saved."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { exportToJSON } from 'simple-web-scraper';\n\nconst data = { name: 'Example', value: 42 };\nexportToJSON(data, 'output.json');\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"exporttocsvdata-any--any-filepath-string-void",children:(0,t.jsx)(n.code,{children:"exportToCSV(data: any | any[], filePath: string): void"})}),"\n",(0,t.jsx)(n.p,{children:"Exports the given data to a CSV file."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," - ",(0,t.jsx)(n.code,{children:"any | any[]"})," - The data to be exported."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filePath"})," - ",(0,t.jsx)(n.code,{children:"string"})," - The path where the CSV file should be saved."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { exportToCSV } from 'simple-web-scraper';\n\nconst data = [\n  { name: 'Example 1', value: 42 },\n  { name: 'Example 2', value: 99 },\n];\nexportToCSV(data, 'output.csv');\n\n// preserve nullish values\nexportToCSV(data, 'output.csv', { preserveNulls: true });\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"backend-example",children:"Backend Example"}),"\n",(0,t.jsxs)(n.p,{children:["This example demonstrates how to use ",(0,t.jsx)(n.code,{children:"simple-web-scraper"})," in a Node.js backend:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import express from 'express';\nimport { WebScraper, exportToJSON, exportToCSV } from 'simple-web-scraper';\n\nconst app = express();\nconst scraper = new WebScraper({\n  usePuppeteer: true,\n  rules: {\n    fullHTML: 'html', // Entire page HTML\n    title: 'head > title', // Page title\n    description: 'meta[name=\"description\"]', // Meta description\n    keywords: 'meta[name=\"keywords\"]', // Meta keywords\n    favicon: 'link[rel=\"icon\"]', // Favicon URL\n    mainHeading: 'h1', // First H1 heading\n    allHeadings: 'h1, h2, h3, h4, h5, h6', // All headings on the page\n    firstParagraph: 'p', // First paragraph\n    allParagraphs: 'p', // All paragraphs on the page\n    links: 'a', // All links on the page\n    images: 'img', // All image URLs\n    imageAlts: 'img', // Alternative text for images\n    videos: 'video, iframe[src*=\"youtube.com\"], iframe[src*=\"vimeo.com\"]', // Video sources\n    tables: 'table', // Capture table elements\n    tableData: 'td', // Capture table cells\n    lists: 'ul, ol', // Capture all lists\n    listItems: 'li', // Capture all list items\n    scripts: 'script', // JavaScript file sources\n    stylesheets: 'link[rel=\"stylesheet\"]', // External CSS files\n    structuredData: 'script[type=\"application/ld+json\"]', // JSON-LD structured data\n    socialLinks:\n      'a[href*=\"facebook.com\"], a[href*=\"twitter.com\"], a[href*=\"linkedin.com\"], a[href*=\"instagram.com\"]', // Social media links\n    author: 'meta[name=\"author\"]', // Author meta tag\n    publishDate: 'meta[property=\"article:published_time\"], time', // Publish date\n    modifiedDate: 'meta[property=\"article:modified_time\"]', // Last modified date\n    canonicalURL: 'link[rel=\"canonical\"]', // Canonical URL\n    openGraphTitle: 'meta[property=\"og:title\"]', // OpenGraph title\n    openGraphDescription: 'meta[property=\"og:description\"]', // OpenGraph description\n    openGraphImage: 'meta[property=\"og:image\"]', // OpenGraph image\n    twitterCard: 'meta[name=\"twitter:card\"]', // Twitter card type\n    twitterTitle: 'meta[name=\"twitter:title\"]', // Twitter title\n    twitterDescription: 'meta[name=\"twitter:description\"]', // Twitter description\n    twitterImage: 'meta[name=\"twitter:image\"]', // Twitter image\n  },\n});\n\napp.get('/scrape-example', async (req, res) => {\n  try {\n    const url = 'https://github.com/The-Node-Forge';\n    const data = await scraper.scrape(url);\n\n    exportToJSON(data, 'output.json'); // export JSON\n    exportToCSV(data, 'output.csv'); // export CSV\n\n    // preserve nullish values while exporting to csv\n    exportToCSV(data, 'outputPreserveNulls.csv', { preserveNulls: true });\n\n    res.status(200).json({ success: true, data });\n  } catch (error) {\n    res.status(500).json({ success: false, error: error.message });\n  }\n});\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsx)(n.p,{children:"Contributions are welcome! Please submit issues or pull requests on GitHub."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);